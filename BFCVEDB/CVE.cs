using System.Xml.Serialization;

/*@author Irena Bojanova(ivb)
 *@date - 2/9/2022 */

namespace BFCVEDB
{
    public class CVE
    {
        //xxxx
        readonly string BFToolGenerated = "Generated by the BFCVE tool.";

        //operation::= _inp_operation | _dat_operation | _mem_operation
        //bug (operation_error) ::= code_error  | specification _error
        //operand_error ::= address_error |size_error | type_error | data_error | function_error
        //final-error::= memory_final_error | injection_final_error | access_final_error | type_compute_final_error
        //vulnerability::= bug operation {operand_error operation} final_error failure

        [XmlAttribute] public string Name { get; set; } = string.Empty;
        [XmlElement] public Weakness BugWeakness { get; set; } = new();
        [XmlElement ("Weakness")] public Weakness[]? Weaknesses { get; set; }
        //[XmlElement] public Weakness WeaknessFinalError { get; set; } = new();
        [XmlElement] public Weakness Failure { get; set; } = new();

        public override string ToString() => 
            @$"{BFToolGenerated}{Environment.NewLine}{Name}:{BugWeakness}{Environment.NewLine}{string.Concat(Weaknesses?.Select(w => Environment.NewLine + w.ToString()) ?? Enumerable.Empty<string>())}{Environment.NewLine}{Failure}";
    }
}
